version: '3.3'

services:
  ###
  # OpenCR
  ###
  opencr:
   #  profiles: ['main']
    container_name: opencr
    hostname: opencr
    image: intrahealth/opencr:latest
    restart: unless-stopped
    ports:
      - "3000:3000"
    
    environment:
      - NODE_ENV=docker
      - HAPI_FHIR_URL=http://opencr-fhir:8080/fhir/metadata
    volumes:
      - ./configs/opencr/config.json:/src/server/config/config_docker.json
      - ./configs/opencr/mediator.json:/src/server/config/mediator.json
      - ./configs/opencr/decisionRules.json:/src/server/config/decisionRules.json
  
  opencr-fhir:
    # profiles: ['main']
    image: "hapiproject/hapi:latest"
    container_name: opencr-fhir
    hostname: opencr-fhir
    restart: unless-stopped
    env_file:
      - configs/opencr/opencr.env
    ports:
      - "8090:8080"  
    volumes:
      - /data/hapi
  
  opencr-es:
    # profiles: ['main']
    container_name: es
    hostname: es
    image: intrahealth/elasticsearch:latest
    restart: unless-stopped
    ports:
      - 9200:9200
    environment:
      - node.name=es01
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - es-data:/usr/share/elasticsearch/data

  ###
  # iSantePlus
  ###
  isanteplus:
    # profiles: ['main']
    container_name: isanteplus
    hostname: isanteplus
    image: ghcr.io/isanteplus/docker-isanteplus-server:${ISANTEPLUS_DOCKER_VERSION}
    restart: unless-stopped
    ports:
      - "8080:8080"
    env_file:
      - ./configs/isanteplus/isanteplus.env
    volumes:
      - isanteplus-data:/openmrs/data
      - ./configs/isanteplus/custom_modules:/custom_modules
    logging:
      driver: "json-file"
      options:
        max-size: "10m"      

  isanteplus-mysql:
   #  profiles: ['main']
    image: ghcr.io/isanteplus/docker-isanteplus-db:${ISANTEPLUS_DB_VERSION}
    command: mysqld --character-set-server=utf8 --collation-server=utf8_general_ci --sql_mode=""
    restart: unless-stopped
    container_name: isanteplus-mysql
    hostname: isanteplus-mysql
    healthcheck:
      test: "exit 0"
    environment:
      - MYSQL_DATABASE=openmrs
      - MYSQL_ROOT_PASSWORD=debezium
      - MYSQL_USER=mysqluser
      - MYSQL_PASSWORD=mysqlpw
      - MYSQL_ROOT_HOST=% # Allow docker containers to connect to mysql
    volumes:
      - mysql-data:/var/lib/mysql
  ###
  # OpenHIM
  ###
  openhim-core:
   #  profiles: ['main']
    container_name: openhim-core
    image: jembi/openhim-core:latest
    restart: unless-stopped
    ports:
      - "8085:8080"
      - "5000:5000"
      - "5001:5001"
      - "5050:5050"
      - "5051:5051"
      - "5052:5052"
      - "7788:7788"
    environment:
      mongo_url: "mongodb://mongo-db/openhim"
      mongo_atnaUrl: "mongodb://mongo-db/openhim"
      NODE_ENV: "development"
    healthcheck:
      test: "curl -sSk https://localhost:8080/heartbeat || exit 1"
      interval: 2m
      timeout: 1m
      retries: 5

  openhim-console:
   #  profiles: ['main']
    container_name: openhim-console
    image: jembi/openhim-console:latest
    restart: unless-stopped
    ports:
      - "9000:80"
    volumes:
      - ./configs/openhim-console/default.json:/usr/share/nginx/html/config/default.json
    healthcheck:
      test: "curl -sS http://openhim-console || exit 1"
      interval: 30s
      timeout: 30s
      retries: 3

  mongo-db:
    # profiles: ['main']
    container_name: mongo-db
    image: mongo:3.4
    volumes:
      - "mongo-data:/data/db"
    restart: unless-stopped


  openhim-config:
   #  profiles: ['main']
    container_name: openhim-config
    image: ghcr.io/i-tech-uw/openhim-config:v0.0.0
    volumes:
      - ./configs/openhim-core/initial-config.json:/app/test-openhim-config.json
    environment:
      - INITIAL_PW=openhim-password
      - ADMIN_PW=$ADMIN_PW
      - API_URL=https://openhim-core:8080

volumes:
  es-data:
    driver: local
  isanteplus-data:
    driver: local
  mysql-data:
    driver: local
  mongo-data:
    driver: local
  shr:
    driver: local
  hapi-data:
    driver: local
  opencr-data:
    driver: local
  certs:
    driver: local
  letsencrypt: 
    driver: local
  nginx-data: 
    driver: local
